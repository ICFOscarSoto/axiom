{#    Button fields   #}
<script>

{% for field in listConstructor.fieldButtons %}
	{% if userData.permissions[listConstructor.id ~ '_field_' ~ field.id] is not defined or (userData.permissions[listConstructor.id ~ '_field_' ~ field.id] is defined and userData.permissions[listConstructor.id ~ '_field_' ~ field.id].allowaccess == true) %}
    {% if field.type == "option" %}
      {% for fieldOption in field.options %}

            {% if fieldOption.actionType == "foreground" %}
              {% if fieldOption.confirm is not defined or fieldOption.confirm == false %}
              $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ fieldOption.id }}']", function() {
                url=$("#{{ listConstructor.id }}-field-button-{{ fieldOption.id }}-url").val();
                url=url.replace('_____',$(this).attr('attr-id'));
								if(url!=""){
	                {% if field.target is not defined or field.target == "_self" %}
	                    window.location.href=url;
	                {% else %}
	                    var win = window.open(url, '{{ field.target }}');
	                    win.focus();
	                {% endif %}
								}
              });
              {% else %}
              {% endif %}
            {% else %}
              {% if fieldOption.confirm is not defined or fieldOption.confirm == false %}
                $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ fieldOption.id }}']", function() {
                  url=$("#{{ listConstructor.id }}-field-button-{{ fieldOption.id }}-url").val();
                  url=url.replace('_____',$(this).attr('attr-id'));
									if(url!="")
	                  $.getJSON(url, function( data ) {
	                    $.each( data, function( key, val ) {

	                    });
	                  }).always(function() {
	                    $("#{{ listConstructor.id }}").DataTable().ajax.reload();
	                  });
                });
              {% else %}
                $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ fieldOption.id }}']", function() {
                url=$("#{{ listConstructor.id }}-field-button-{{ fieldOption.id }}-url").val();
                url=url.replace('_____',$(this).attr('attr-id'));
								if(url!=""){
                	$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action',url);
                	$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action-type','{{ fieldOption.actionType }}');
                	$('#{{ listConstructor.id }}-modal-body').html('¿Está seguro que desea {% if fieldOption.confirm_msg is defined %}{{ fieldOption.confirm_msg }}{% else %}{{fieldOption.name}} este registro{% endif %}? {% if fieldOption.undo is defined and fieldOption.undo==false %} </br><b>¡ATENCIÓN!</b> Esta operación no podrá deshacerse.{% endif %}');
								}
              });
              {% endif %}
            {% endif %}

      {% endfor %}
    {% else %}

            {% if field.actionType == "foreground" %}
              {% if field.confirm is not defined or field.confirm == false %}
              $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ field.id }}']", function() {
                url=$("#{{ listConstructor.id }}-field-button-{{ field.id }}-url").val();
                url=url.replace('_____',$(this).attr('attr-id'));
								if(url!=""){
	                {% if field.target is not defined or field.target == "_self" %}
	                    window.location.href=url;
	                {% else %}
	                    var win = window.open(url, '{{ field.target }}');
	                    win.focus();
	                {% endif %}
								}
              });
              {% else %}
              {% endif %}
            {% else %}
              {# Get data and open modal form #}
              {% if field.confirm is not defined or field.confirm == false %}
                $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ field.id }}']", function() {
									if((load_wait_modal)==0) {
										++load_wait_modal;
										$("#load-spinner").fadeIn();
	                  url=$("#{{ listConstructor.id }}-field-button-{{ field.id }}-url").val();
	                  url=url.replace('_____',$(this).attr('attr-id'));
										modal_parent_button = $(this).attr('id');
										modal_title = $(this).attr('modal_title');
										modal_save 	= $(this).attr('modal_save');
										if(url!="")
		                  $.post(url, null,
		                    function(data, status, xhr){
														modal_parent = '';
														$("#modal_container").children('.modal').each(function () {
															if ($(this).hasClass('in'))
																modal_parent = $(this).attr('id');
															// Cerrar otras modales
	    												$(this).modal('hide');
														});
		                        $("#{{field.modal}}-modal-form-body").html(data);
														if (typeof modal_title !== 'undefined')
															$("#{{field.modal}}-modal-title").html(modal_title);
						                if (typeof modal_save !== 'undefined' && modal_save=='false')
						                    $("#{{field.modal}}-button-continue").css('display', 'none');
						                else
						                    $("#{{field.modal}}-button-continue").css('display', 'inline-block');
		                        $("#{{field.modal}}-modal-form-body").find(':checkbox').not($('[id$=-chkall]')).iCheck({checkboxClass: 'icheckbox_flat-blue', radioClass: 'iradio_flat-blue'});
		                        $("#{{field.modal}}-modal-form-body select").select2();
														$("#{{field.modal}}-modal-form").attr('modal_parent',modal_parent);
														$("#{{field.modal}}-modal-form").attr('modal_parent_button',modal_parent_button);
														$('#{{field.modal}}-modal-form').on('hidden.bs.modal', function (e) {
														  if ($('#{{field.modal}}-modal-form').attr('modal_parent')!=''){
																	// Lanzar boton del padre
																	$("#"+$('#'+$('#{{field.modal}}-modal-form').attr('modal_parent')).attr('modal_parent_button')).click();
															}
														})
		                        $("#{{field.modal}}-modal-form").modal();
														if((--load_wait_modal)==0) $("#load-spinner").fadeOut();

		                  });
										else
											if((--load_wait_modal)==0) $("#load-spinner").fadeOut();
									}
                });
              {% else %}
                $('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ field.id }}']", function() {
                url=$("#{{ listConstructor.id }}-field-button-{{ field.id }}-url").val();
                url=url.replace('_____',$(this).attr('attr-id'));
								if(url!=""){
                	$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action',url);
                	$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action-type','{{ field.actionType }}');
                	$('#{{ listConstructor.id }}-modal-body').html('¿Está seguro que desea {% if field.confirm_msg is defined %}{{ field.confirm_msg }}{% else %}{{field.name}} este registro{% endif %}? {% if field.undo is defined and field.undo==false %} </br><b>¡ATENCIÓN!</b> Esta operación no podrá deshacerse.{% endif %}');
								}
              });
              {% endif %}
            {% endif %}

    {% endif %}
  {% endif %}
{% endfor %}
</script>
<!-- END BUTTONZONE -->
{% for field in listConstructor.fieldButtons %}
  {% if userData.permissions[listConstructor.id ~ '_field_' ~ field.id] is not defined or (userData.permissions[listConstructor.id ~ '_field_' ~ field.id] is defined and userData.permissions[listConstructor.id ~ '_field_' ~ field.id].allowaccess == true) %}
    {% set routeParams = [] %}
    {% set routeParams = routeParams|merge({('id'): '_____'}) %}
    {% if field.routeParams is defined %}
      {% for key,param in field.routeParams %}
        {% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
          {% set routeParams = routeParams|merge({(key): _context[param]}) %}
        {% else %}
          {% set routeParams = routeParams|merge({(key): param}) %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if field.type == "option" %}
      {% for fieldOption in field.options %}
        {% set optionParams = routeParams %}
        {% if fieldOption.routeParams is defined %}
          {% for key,param in fieldOption.routeParams %}
            {% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
              {% set optionParams = optionParams|merge({(key): _context[param]}) %}
            {% else %}
              {% set optionParams = optionParams|merge({(key): param}) %}
            {% endif %}
          {% endfor %}
        {% endif %}
        <input id="{{ listConstructor.id }}-field-button-{{ fieldOption.id }}-url" type="hidden" value="{% if fieldOption.route|length %}{{ url(fieldOption.route,optionParams) }}{% endif %}" />
      {% endfor %}
    {% else %}
      <input id="{{ listConstructor.id }}-field-button-{{ field.id }}-url" type="hidden" value="{% if field.route|length %}{{ url(field.route,routeParams) }}{% endif %}" />
    {% endif %}
  {% endif %}
{% endfor %}
