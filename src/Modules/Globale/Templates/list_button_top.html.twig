{#  TOP BUTTONS BACKGROUND ACTION  #}
<script>
{% for field in listConstructor.topButtons %}
  {% if field.actionType is defined and field.actionType=="background" %}
    //OPEN MODAL
    $('body').on('click', "#{{ field.id }}-top-button", function() {
      {% set routeParams = [] %}
      {% if field.routeParams is defined %}

        {% for key,param in field.routeParams %}
          {% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
            {% set routeParams = routeParams|merge({(key): _context[param]}) %}
          {% else %}
            {% set routeParams = routeParams|merge({(key): param}) %}
          {% endif %}
        {% endfor %}
      {% endif %}
      {% if field.modal is defined and field.modal|length  %}
          //if route has params...

          $.post('{{ url(field.route, routeParams) }}', null,
            function(data, status, xhr){
              $("#{{field.modal}}-modal-form-body").html(data);
              //$('#{{field.modal}}-modal-form input').iCheck({checkboxClass: 'icheckbox_flat-blue',radioClass: 'iradio_flat-blue'});
              $("#{{field.modal}}-modal-form-body").find(':checkbox').not($('[id$=-chkall]')).iCheck({checkboxClass: 'icheckbox_flat-blue', radioClass: 'iradio_flat-blue'});
              $("#{{field.modal}}-modal-form-body select").select2();
              $("#{{field.modal}}-modal-form").modal();
          });
        {% else %}
            {% if field.confirm is defined and field.confirm==true  %}
              {# SEND IDS #}
              $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action','{{ url(field.route, routeParams) }}');
              $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-send-list','1');
              $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action-type','{{ field.actionType }}');
              $('#{{ listConstructor.id }}-modal-body').html('¿Está seguro que desea {{field.name}} los registro seleccionados? {% if field.undo is defined and field.undo==false %} </br><b>¡ATENCIÓN!</b> Esta operación no podrá deshacerse.{% endif %}');
              $("#{{ listConstructor.id }}-modal-confirm").modal();
            {% else %}

            {% endif %}

        {% endif %}

    });

    {% if field.modal is defined and field.modal|length  %}
          //CONTINUE BUTTON FOR MODAL FORMS
          $('body').on('click', "#{{ field.modal }}-button-continue", function(event) {
                event.stopImmediatePropagation();
                if($("#{{field.modal}}-modal-form-body").find('form').valid()){
                  if((++load_wait)==1) $("#load-spinner").fadeIn();
                  var id_parent='';
                  if (typeof $('#id-parent').val() !== 'undefined') {
                    id_parent=encodeURI('&id-parent='+$('#id-parent').val());
                  }
                  $.post($("#{{field.modal}}-modal-form-body").find('form').find('#post-url').val(), $("#{{field.modal}}-modal-form-body").find('form').serialize()+id_parent,
                      function(data, status, xhr){
                        if((--load_wait)==0) $("#load-spinner").fadeOut();
                        {# VALIDATION ON PROCCESS #}
                        {# FIELD_ERRORS #}
                        if(typeof data.validation !== 'undefined' && data.validation.valid==false && typeof data.validation.field_errors !== 'undefined'){
                          Object.keys(data.validation.field_errors).forEach(function(index){
                            $("#{{field.modal}}-modal-form-body #form_"+index).parent().append("<label id='form_period-error' class='error' for='form_period'>"+data.validation.field_errors[index]+"</label>");
                          });
                        }
                        {# GLOBAL_ERRORS #}
                        if(typeof data.validation !== 'undefined' && data.validation.valid==false && typeof data.validation.global_errors){
                          var errors="";
                          Object.keys(data.validation.global_errors).forEach(function(index){
                            errors+="<li>"+data.validation.global_errors[index]+"</li>";
                          });
                          $("#{{field.modal}}-modal-form-body #validation-errors-list").html(errors);
                          $("#{{field.modal}}-modal-form-body [id$='-validation-error']").slideDown();
                        }
                        {# GLOBAL_WARNINGS #}
                        var warnings="";
                        if(typeof data.validation !== 'undefined' && typeof data.validation.global_warnings !== 'undefined'){
                          Object.keys(data.validation.global_warnings).forEach(function(index){
                            warnings+="<li>"+data.validation.global_warnings[index]+"</li>";
                          });
                          $("#{{field.modal}}-modal-form-body #validation-warnings-list").html(warnings);
                          $("#{{field.modal}}-modal-form-body [id$='-validation-warning']").slideDown();
                        }
                        if(data.result){
                          $("#{{ listConstructor.id }}").DataTable().ajax.reload();

                          {% if listConstructor.events.save is defined %}
                            {% for event in listConstructor.events.save %}
                              {{ event | raw }}(data.id);
                            {% endfor %}
                          {% endif %}

                          toastr.success("Datos guardados correctamente", "Confirmación", confirmation);


                          if(warnings=="") $("#{{ field.modal }}-modal-form").modal('hide');
                          $("#{{field.modal}}-modal-form-body").find('form').trigger("reset");
                          $("#{{field.modal}}-modal-form-body").find('form').validate({ lang: 'es' }).resetForm();
                        }
                          else toastr.error("Ocurrió un error al guardar los datos", "Confirmación", confirmation);


                    }, "json");
                  }
          });
      {% else %}

      {% endif %}

  {% endif %}
{% endfor %}

$('body').on('click', "[id$='-top-button-foreground']", function() {
  if($(this).attr('attr-href')!=""){
    var url=$(this).attr('attr-href');
    var target=$(this).attr('attr-target');
    if (typeof target !== typeof undefined && target !== false) target='_self';
    if($(this).attr('attr-search')==1){
      url+='?'+$("#search_param").val();
    }
    window.open(
      url,
      target
    );
  }
});
</script>
