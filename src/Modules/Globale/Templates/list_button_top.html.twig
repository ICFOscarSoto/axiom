{#  TOP BUTTONS BACKGROUND ACTION  #}
<script>
{% for field in listConstructor.topButtons %}
  {% if field.zone is not defined or (field.zone is defined and field.zone in userData.permissions and userData.permissions[field.zone].allowaccess == true) %}
    {% if field.actionType is defined and field.actionType=="background" %}
      //OPEN MODAL
      $('body').on('click', "#{{ field.id }}-top-button", function() {
        {% set routeParams = [] %}
        {% if field.routeParams is defined %}

          {% for key,param in field.routeParams %}
            {% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
              {% set routeParams = routeParams|merge({(key): _context[param]}) %}
            {% else %}
              {% set routeParams = routeParams|merge({(key): param}) %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {% if field.modal is defined and field.modal|length  %}
            //if route has params...
            modal_title = $(this).attr('modal_title');
            modal_save  = $(this).attr('modal_save');
            $.post('{{ url(field.route, routeParams) }}', null,
              function(data, status, xhr){
                $("#{{field.modal}}-modal-form-body").html(data);
                if (typeof modal_title !== 'undefined')
                  $("#{{field.modal}}-modal-title").html(modal_title);
                if (typeof modal_save !== 'undefined' &&  modal_save=='false')
                    $("#{{field.modal}}-button-continue").css('display', 'none');
                else
                    $("#{{field.modal}}-button-continue").css('display', 'inline-block');
                $("#{{field.modal}}-modal-form-body").find(':checkbox').not($('[id$=-chkall]')).iCheck({checkboxClass: 'icheckbox_flat-blue', radioClass: 'iradio_flat-blue'});
                $("#{{field.modal}}-modal-form-body select").not('.hidden, .noselect2').select2();
                $("#{{field.modal}}-modal-form").modal();
            });
          {% else %}
              {% if field.confirm is defined and field.confirm==true  %}
                {# SEND IDS #}
                $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action','{{ url(field.route, routeParams) }}');
                $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-send-list','1');
                $('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action-type','{{ field.actionType }}');
                $('#{{ listConstructor.id }}-modal-body').html('¿Está seguro que desea {% if field.confirm_msg is defined %}{{ field.confirm_msg }}{% else %}{{field.name}} los registros seleccionados{% endif %}? {% if field.undo is defined and field.undo==false %} </br><b>¡ATENCIÓN!</b> Esta operación no podrá deshacerse.{% endif %}');
                $("#{{ listConstructor.id }}-modal-confirm").modal();
              {% else %}
                {# TODO: action withoud modal #}




              {% endif %}

          {% endif %}

      });

      {% if field.modal is defined and field.modal|length and (_context['button_continue_' ~ field.modal] is not defined or _context['button_continue_' ~ field.modal]==false)%}
        {{ include("@Globale/list_button_continue.html.twig") }}
        {% set _context=_context|merge({('button_continue_' ~ field.modal) : true}) %}
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}

$('body').on('click', "[id$='-top-button-foreground']", function() {
  if($(this).attr('attr-href')!=""){
    var url=$(this).attr('attr-href');
    var target=$(this).attr('attr-target');
    if (typeof target !== typeof undefined && target !== false) target='_self';

    ids=[];
    var selectedItems = $("input[class*='-chk-list']:checked").map(function(){
        return $(this).attr("item-id");
    }).toArray();
    ids=selectedItems;

    if($(this).attr('attr-search')==1){
      url+='?ids='+ids+'&'+$("#search_param").val();
    }else{
      url+='?ids='+ids;
    }
    window.open(
      url,
      target
    );
  }
});
</script>
