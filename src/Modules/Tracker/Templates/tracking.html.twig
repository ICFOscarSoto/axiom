{% set params = app.request.attributes.get('_route_params')|merge(app.request.query.all()) %}
{% block header %}
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="description" content="Neon Admin Panel" />
	<meta name="author" content="" />
	{{ include('@Globale/header.html.twig') }}
	<!-- Imported styles on this page -->
	<link rel="stylesheet" href="{{ url('index') }}/js/jvectormap/jquery-jvectormap-1.2.2.css">
	<link rel="stylesheet" href="{{ url('index') }}/js/rickshaw/rickshaw.min.css">
	<style>
      .ol-popup {
        position: absolute;
        background-color: white;
        -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        padding: 15px;
        border-radius: 10px;
        border: 1px solid #cccccc;
        bottom: 12px;
        left: -50px;
        min-width: 280px;
      }
      .ol-popup:after, .ol-popup:before {
        top: 100%;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
      }
      .ol-popup:after {
        border-top-color: white;
        border-width: 10px;
        left: 48px;
        margin-left: -10px;
      }
      .ol-popup:before {
        border-top-color: #cccccc;
        border-width: 11px;
        left: 48px;
        margin-left: -11px;
      }
      .ol-popup-closer {
        text-decoration: none;
        position: absolute;
        top: 2px;
        right: 8px;
      }
      .ol-popup-closer:after {
        content: "âœ–";
      }
			.ui-label{
				display: none !important;
			}
    </style>
{% endblock %}
<title>{% block title %}{{ interfaceName }}{% endblock %}</title>
<body class="page-body" data-url="{{ url('indexAdmin') }}">
<div class="page-container"><!-- add class "sidebar-collapsed" to close sidebar by default, "chat-visible" to make chat appear always -->
	{{ include('@Globale/sidebar_menu.html.twig') }}
	<div class="main-content">
		{{ include('@Globale/head.html.twig') }}
		<hr />
		{{ include('@Globale/breadcrumb.html.twig') }}

		<!-- MAIN CONTENT -->
		<div class="principal-content" id="principal-content">
			<div class="row">
				<div class='col-md-6'>
           <div class="form-group">
              <label class="control-label">Fecha desde:</label>
              <div class='input-group date' name="start" id="start">
                 <input id="start_date" type='text' class="form-control" />
                 <span class="input-group-addon">
                 <span class="glyphicon glyphicon-calendar"></span>
                 </span>
              </div>
           </div>
        </div>
				<div class='col-md-6'>
           <div class="form-group">
              <label class="control-label">Fecha hasta:</label>
              <div class='input-group date' name='end' id='end'>
                 <input id="end_date" type='text' class="form-control" />
                 <span class="input-group-addon">
                 <span class="glyphicon glyphicon-calendar"></span>
                 </span>
              </div>
           </div>
        </div>
			</div>
			<div id="point_slider"></div>
		</br>
      <div id="map" style="height:600px" class="map"></div>
		</div>
		<div id="popup" class="ol-popup">
      <a href="#" id="popup-closer" class="ol-popup-closer"></a>
      <div id="popup-content"></div>
    </div>
    <script type="text/javascript">
    var iconFeature;
		var overlay
		var layer;
		var view;
		var map;
		var markers=[];
		var lines=[];
		var points=[];
		var pointsIcons=[];
		var container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');
		var lastPoint=0;
		var imageStyle;
		var imageStyleSelected;
		var point_slider;
		var slider;
		var previousSelPoint=null;
		var previousSelPointZindex=0;

		 /**
			* Add a click handler to hide the popup.
			* @return {boolean} Don't follow the href.
			*/
		 closer.onclick = function() {
			 overlay.setPosition(undefined);
			 closer.blur();
			 return false;
		 };

    $(document).ready(function() {
				$('#start').datetimepicker({
					defaultDate: "{{ start }}"
				}).on('dp.change', function (e) { pointsRefresh(); });
				$('#end').datetimepicker({
					defaultDate: "{{ end }}"
				}).on('dp.change', function (e) { pointsRefresh(); });

				overlay = new ol.Overlay({
					 element: container,
					 autoPan: true,
					 autoPanAnimation: {
						 duration: 250
					 }
				});

				layer = new ol.layer.Tile({
	        source: new ol.source.OSM()
	      });
				view = new ol.View({
					center: ol.proj.fromLonLat([-1.8806247,39.0038623]),
					zoom: 17
			  });
	      map = new ol.Map({
	        target: 'map',
	        layers: [layer],
					overlays: [overlay],
	        view: view
	      });

				imageStyle = new ol.style.Style({
	        	image: new ol.style.Circle({
		          radius: 0,
		          fill: new ol.style.Fill({color: '#1081e0'}),
		          //stroke: new ol.style.Stroke({color: '#1081e0', width: 1})
		        })
      	});

				imageSelectedStyle = new ol.style.Style({
	        	image: new ol.style.Circle({
		          radius: 5,
		          fill: new ol.style.Fill({color: '#ffffff'}),
		          stroke: new ol.style.Stroke({color: '#1081e0', width: 2})
		        })
      	});

			var previus=null;
			var flagRefresh=false;

			map.on('click', function(e) {
				var iconFeatureA = map.getFeaturesAtPixel(e.pixel);
				showInfo(iconFeatureA);
			});
			/*$("#point_slider").slider({
				slide: function (event, ui) {
					overlay.setPosition(undefined);
					closer.blur();

					value=$(this).slider('value');
					console.log(value);
					if(previousSelPoint){
						 map.getLayers().getArray()[previousSelPoint].getSource().getFeatures()[0].setStyle(imageStyle);
						 map.getLayers().getArray()[previousSelPoint].setZIndex(previousSelPointZindex);
					}
					previousSelPoint=points[value];
					previousSelPointZindex=map.getLayers().getArray()[points[value]].getZIndex();
					map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].setStyle(imageSelectedStyle);
					map.getLayers().getArray()[points[value]].setZIndex(9999);
					view.animate({
						center: ol.proj.fromLonLat([map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].get("dataTracker").longitude*1,map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].get("dataTracker").latitude*1]),
						duration: 0
					});
					showInfo(map.getLayers().getArray()[points[value]].getSource().getFeatures());

				}
			});*/
			slider = document.getElementById('point_slider');
			noUiSlider.create(slider, {
		    start: 0,
				step: 1,
		    range: {
		        'min': 0,
		        'max': 1
		    	}
			});
			slider.setAttribute('disabled', true);

				slider.noUiSlider.on('slide', function () {
					overlay.setPosition(undefined);
					closer.blur();
					value=parseInt(slider.noUiSlider.get());
					if(previousSelPoint){
						 map.getLayers().getArray()[previousSelPoint].getSource().getFeatures()[0].setStyle(imageStyle);
						 map.getLayers().getArray()[previousSelPoint].setZIndex(previousSelPointZindex);
					}
					previousSelPoint=points[value];
					previousSelPointZindex=map.getLayers().getArray()[points[value]].getZIndex();
					map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].setStyle(imageSelectedStyle);
					map.getLayers().getArray()[points[value]].setZIndex(9999);
					view.animate({
						center: ol.proj.fromLonLat([map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].get("dataTracker").longitude*1,map.getLayers().getArray()[points[value]].getSource().getFeatures()[0].get("dataTracker").latitude*1]),
						duration: 0
					});
					showInfo(map.getLayers().getArray()[points[value]].getSource().getFeatures());
				});

			pointsRefresh();
		});



			function pointsRefresh(){
				clearLines();
				clearPoints();
				$.getJSON("{{url('getPoints',{'id':1})}}?start="+$("#start").data('DateTimePicker').date().format("YYYY-MM-DD HH:mm:ss")+"&end="+$("#end").data('DateTimePicker').date().format("YYYY-MM-DD HH:mm:ss"), function( data ) {
					var previus=null;
					$.each(data,function( key, val ){
						if(previus!=null){
							var line=createLine(previus.latitude*1, previus.longitude*1, val.latitude*1, val.longitude*1, val.id%3);
							lines.push(line);
							map.addLayer(line);
						}
						previus=val;
					});
					if(previus) doPan(previus.latitude*1, previus.longitude*1);
					var layersFlag=map.getLayers().getArray().length;
					var i=0;
					$.each( data, function( key, val ) {
							var point=createPoint(val,val.latitude*1,val.longitude*1);
							map.addLayer(point);
							points[i]=layersFlag;
							i++;
							layersFlag++;
					});
					if(points.length>1){
						slider.removeAttribute('disabled');
						slider.noUiSlider.updateOptions({ range: {'min': 0, 'max': points.length-1}});

					}else{
						slider.noUiSlider.updateOptions({ range: {'min': 0, 'max': 1}});
						slider.setAttribute('disabled', true);
					}
					//$("#point_slider").slider("option", "max", (points.length-1));
				}).always(function() {
					flagRefresh=true;
				});

			}

			function showInfo(iconFeatureA){
				if (iconFeatureA !== null) {
			    var dataTracker = iconFeatureA[0].get("dataTracker");
					var coordinate = iconFeatureA[0].getGeometry().getCoordinates();
					var timestamp=new Date() / 1000;
					var notificationTimeAgo=getTimeAgo(timestamp-(new Date(dataTracker.date)/1000));
					var url="{{ url('tracking',{'id': '_____'}) }}";
					url=url.replace('_____',dataTracker.id);
					content.innerHTML = '<div class="row">';
					content.innerHTML +='<div class="col-sm-12"><span class="fa fa-clock-o fa-lg"></span>&nbsp;' + notificationTimeAgo +'</div>';
					content.innerHTML +='<div class="row"><div class="col-sm-12">&nbsp;</div></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><span class="fa fa-tachometer fa-2x"></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><span class="fa fa-compass fa-2x"></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><span class="fa fa-caret-square-o-up fa-2x"></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><b>' + dataTracker.kmph  +' kmph</b></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><b>' + dataTracker.course  +' Âº</b></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><b>' + dataTracker.altitude  +' m</b></div>';
					content.innerHTML +='<div class="row"><div class="col-sm-12">&nbsp;</div></div>';
					content.innerHTML +='<div class="col-xs-8 col-sm-8 col-md-8" style="text-align:center"><span class="fa fa-globe fa-2x"></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><span class="fa fa-signal fa-2x"></div>';
					content.innerHTML +='<div class="col-xs-8 col-sm-8 col-md-8" style="text-align:center"><b>' + dataTracker.latitude  +', '+dataTracker.longitude+'</b></div>';
					content.innerHTML +='<div class="col-xs-4 col-sm-4 col-md-4" style="text-align:center"><b>' + dataTracker.sats  +'</b></div>';
					content.innerHTML +='<input id="popupId" type=\'hidden\' value=\''+dataTracker.id+'\'/>';
					content.innerHTML +='<input id="popupDate" type=\'hidden\' value=\''+dataTracker.date+'\'/>';
					content.innerHTML +='</div>';
        	overlay.setPosition(coordinate);
			    //e.preventDefault(); // avoid bubbling
			  }else{
					overlay.setPosition(undefined);
	 			  closer.blur();
				}
			}

			function clearLines(){
				lines.forEach(function (val) {
						map.removeLayer(val);
				});
				lines=[];
			}

			function clearPoints(){
				points.forEach(function (val) {
						map.removeLayer(val);
				});
				points=[];
			}

			function doPan(latitude, longitude) {
				view.animate({
					center: ol.proj.fromLonLat([longitude,latitude]),
					duration: 1000
				});
			}

			function createPoint(data, latitude, longitude){
				var features = [];
				var iconFeature;

				iconFeature = new ol.Feature({
						geometry: new ol.geom.Point(ol.proj.transform([longitude, latitude], 'EPSG:4326','EPSG:3857')),
						dataTracker: data
				});

				iconFeature.setStyle(imageStyle);
				features.push(iconFeature);
		    var vectorSource = new ol.source.Vector({
		        features: features      //add an array of features
		        //,style: iconStyle     //to set the style for all your features...
		    });
		    var vectorLayer = new ol.layer.Vector({
		        source: vectorSource
		    });
				//doPan(latitude, longitude);
				pointsIcons[data.id]=iconFeature;
				return vectorLayer;
			}

			function createMarker(data,latitude, longitude){
				//Labels
				//var data=id;
				var features = [];
				var iconFeature;
				//var dataArray=data;
				iconFeature = new ol.Feature({
						geometry: new ol.geom.Point(ol.proj.transform([longitude, latitude], 'EPSG:4326','EPSG:3857')),
						dataTracker: data
				});

				var iconStyle = [
					new ol.style.Style({
							image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
							anchor: [0.5, 90],
							anchorXUnits: 'fraction',
							anchorYUnits: 'pixels',
							opacity: 1,
							scale: 1,
							src: '{{ url('index') }}images/gpsmarker.png'
							}))
					}),
					/*new ol.style.Style({
							text: new ol.style.Text({
									text: "FURGÃ“N 1",
									font: "bold 14px Helvetica",
									offsetY: 25,
									backgroundFill: new ol.style.Fill({
											color: '#fff'
									}),
									padding: [5,10,5,10],
									fill: new ol.style.Fill({
											color: '#1081e0'
									})
							})
					})*/
				];
				iconFeature.setStyle(iconStyle);

				features.push(iconFeature);
		    var vectorSource = new ol.source.Vector({
		        features: features      //add an array of features
		        //,style: iconStyle     //to set the style for all your features...
		    });
		    var vectorLayer = new ol.layer.Vector({
		        source: vectorSource,
						dataId: data.id,
						dataLat: data.latitude,
						dataLon: data.longitude
		    });
				markers[data.id]=iconFeature;
				return vectorLayer;
			}

			function increase_brightness(hex, percent){
			    // strip the leading # if it's there
			    hex = hex.replace(/^\s*#|\s*$/g, '');

			    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`
			    if(hex.length == 3){
			        hex = hex.replace(/(.)/g, '$1$1');
			    }

			    var r = parseInt(hex.substr(0, 2), 16),
			        g = parseInt(hex.substr(2, 2), 16),
			        b = parseInt(hex.substr(4, 2), 16);

			    return '#' +
			       ((0|(1<<8) + r + (256 - r) * percent / 100).toString(16)).substr(1) +
			       ((0|(1<<8) + g + (256 - g) * percent / 100).toString(16)).substr(1) +
			       ((0|(1<<8) + b + (256 - b) * percent / 100).toString(16)).substr(1);
			}

			function createLine(startLat, startLon, endLat, endLon, type){
				//Lineas
				var coords = [
		  		[startLon, startLat],
		  		[endLon, endLat]
				];
				var lineString = new ol.geom.LineString(coords);
				// transform to EPSG:3857
				lineString.transform('EPSG:4326', 'EPSG:3857');
				var labelFeature = new ol.Feature({
		  	geometry: lineString,
		  	name: 'Line'
				});
				var lineStyle = new ol.style.Style({
				  stroke: new ol.style.Stroke({
				    color: increase_brightness('#1081e0',type*25),
				    width: 5
				  })
				});
				var source = new ol.source.Vector({
				  features: [labelFeature]
				});
				var vector = new ol.layer.Vector({
				  source: source,
				  style: [lineStyle]
				});
				return vector;
			}
      </script>
		<!-- END MAIN CONTENT -->
	{{ include('@Globale/footer.html.twig') }}
	</div>
	{{ include('@Globale/chat.html.twig') }}
	<!-- Chat Histories -->
	{{ include('@Globale/chat_histories.html.twig') }}
</div>
	<!-- MODALS  -->

	<!-- END MODALS -->
{% block footer %}
	<link rel="stylesheet" href="{{ url('index') }}js/datatables/datatables.css">
	<link rel="stylesheet" href="{{ url('index') }}js/select2/select2-bootstrap.css">
	<link rel="stylesheet" href="{{ url('index') }}js/select2/select2.css">
	<link rel="stylesheet" href="{{ url('index') }}css/custom.css">
  <link rel="stylesheet" href="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/css/ol.css" type="text/css">
  <link rel="stylesheet" href="{{ url('index') }}js/datetimepicker/bootstrap-datetimepicker.min.css">
	<link rel="stylesheet" href="{{ url('index') }}js/nouislider/nouislider.min.css">

	<!-- Imported scripts on this page -->
	<script src="{{ url('index') }}js/globale/dates.js"></script>
 	<script src="{{ url('index') }}js/datatables/datatables.js"></script>
	<script src="{{ url('index') }}js/select2/select2.min.js"></script>
	<script src="{{ url('index') }}js/moment.min.js"></script>
	<script src="{{ url('index') }}js/moment-es.js"></script>
  <script src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/build/ol.js"></script>
	<script src="{{ url('index') }}js/datetimepicker/bootstrap-datetimepicker.min.js"></script>
	<script src="{{ url('index') }}js/nouislider/nouislider.min.js"></script>


	 {{ include('@Globale/bottom.html.twig') }}
{% endblock %}
</body>
