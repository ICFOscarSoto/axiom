{% set params = app.request.attributes.get('_route_params')|merge(app.request.query.all()) %}
{% block header %}
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="description" content="Axiom Business Management" />
	<meta name="author" content="" />
	<link rel="icon" href="images/favicon.ico">
	{{ include('@Globale/header.html.twig') }}

{% endblock %}
<title>{% block title %}{{ interfaceName }}{% endblock %}</title>
<body class="page-body" data-url="{{ url('indexAdmin') }}">
<div class="page-container"><!-- add class "sidebar-collapsed" to close sidebar by default, "chat-visible" to make chat appear always -->
	{{ include('@Globale/sidebar_menu.html.twig') }}
	<div class="main-content">
		{{ include('@Globale/head.html.twig') }}
		<hr />
		{{ include('@Globale/breadcrumb.html.twig') }}
		<h2>{{ interfaceName }}</h2>
		</br>
		<!-- MAIN CONTENT -->
		<div class="principal-content">




<script>
			//TOP BUTTONS BACKGROUND ACTION
			{% for field in listConstructor.topButtons %}

				{% if field.actionType is defined and field.actionType=="background" %}
					//OPEN MODAL
					$('body').on('click', "#{{ field.id }}-top-button", function() {
						{% set routeParams = [] %}
						{% if field.routeParams is defined %}

							{% for key,param in field.routeParams %}
								{% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
									{% set routeParams = routeParams|merge({(key): _context[param]}) %}
								{% else %}
									{% set routeParams = routeParams|merge({(key): param}) %}
								{% endif %}
							{% endfor %}
						{% endif %}
						{% if field.modal is defined and field.modal|length  %}
								//if route has params...

								$.post('{{ url(field.route, routeParams) }}', null,
									function(data, status, xhr){
										$("#{{field.modal}}-modal-form-body").html(data);
										//$('#{{field.modal}}-modal-form input').iCheck({checkboxClass: 'icheckbox_flat-blue',radioClass: 'iradio_flat-blue'});
										$("#{{field.modal}}-modal-form-body").find(':checkbox').not($('[id$=-chkall]')).iCheck({checkboxClass: 'icheckbox_flat-blue', radioClass: 'iradio_flat-blue'});
										$("#{{field.modal}}-modal-form-body select").select2();
										$("#{{field.modal}}-modal-form").modal();
								});
							{% else %}
									{% if field.confirm is defined and field.confirm==true  %}
										{# SEND IDS #}
										$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action','{{ url(field.route, routeParams) }}');
										$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-send-list','1');
										$('#{{ listConstructor.id }}-modal-button-continue').attr('attr-action-type','{{ field.actionType }}');
										$('#{{ listConstructor.id }}-modal-body').html('¿Está seguro que desea {{field.name}} los registro seleccionados? {% if field.undo is defined and field.undo==false %} </br><b>¡ATENCIÓN!</b> Esta operación no podrá deshacerse.{% endif %}');
										$("#{{ listConstructor.id }}-modal-confirm").modal();
									{% else %}

									{% endif %}

							{% endif %}

					});


					{% if field.modal is defined and field.modal|length  %}
								//CONTINUE BUTTON FOR MODAL FORMS
								$('body').on('click', "#{{ field.modal }}-button-continue", function() {
											if($("#{{field.modal}}-modal-form-body").find('form').valid()){
												if((++load_wait)==1) $("#load-spinner").fadeIn();
												var id_parent='';
												if (typeof $('#id-parent').val() !== 'undefined') {
													id_parent=encodeURI('&id-parent='+$('#id-parent').val());
												}
												$.post($("#{{field.modal}}-modal-form-body").find('form').find('#post-url').val(), $("#{{field.modal}}-modal-form-body").find('form').serialize()+id_parent,
														function(data, status, xhr){
															if((--load_wait)==0) $("#load-spinner").fadeOut();
															if(data.result){
																toastr.success("Datos guardados correctamente", "Confirmación", confirmation);
																$("#{{ field.modal }}-modal-form").modal('hide');
																$("#{{field.modal}}-modal-form-body").find('form').trigger("reset");
																$("#{{field.modal}}-modal-form-body").find('form').validate().resetForm();
															}
																else toastr.error("Ocurrió un error al guardar los datos", "Confirmación", confirmation);
													}, "json");
												}
								});
						{% else %}

						{% endif %}

				{% endif %}
			{% endfor %}
	</script>

	<!-- BUTTON ZONE -->
	<p>
	<div class="btn-group">
	{% for field in listConstructor.topButtons %}

				{% if field.actionType is defined and field.actionType=="background" %}
				<a style="font-size: 20px" id="{{ field.id }}-top-button" type="button" class="btn tooltip-primary {{ field.type }}" {% if field.tooltip is defined %} data-toggle="tooltip" data-placement="bottom" title="" data-original-title=" {{ field.tooltip }} {% endif %} ">
					<i class="{{ field.icon }}"></i>
				</a>
				{% else %}
						{% set routeParams = [] %}
						{% if field.routeParams is defined %}
							{% for key,param in field.routeParams %}
								{% if _context[param] is defined %} {# Detect if parameter is a reference to a var or is a value #}
									{% set routeParams = routeParams|merge({(key): _context[param]}) %}
								{% else %}
									{% set routeParams = routeParams|merge({(key): param}) %}
								{% endif %}
							{% endfor %}
						{% endif %}

						<a attr-search="{% if field.addSearch is defined %}{{field.addSearch}}{% else %} false {% endif %}" attr-href="{% if field.route is defined and field.route|length %}{{ url(field.route, routeParams) }}{% endif %}" href="javascript:void(0);"
						style="font-size: 20px" id="{{ field.id }}-top-button-foreground" type="button" class="btn tooltip-primary {% if field.type is defined and field.type|length %}{{ field.type }}{% else %} btn-default {% endif %}" {% if field.tooltip is defined %} data-toggle="tooltip" data-placement="bottom" title="" data-original-title=" {{ field.tooltip }} {% endif %} ">
							<i class="{{ field.icon }}"></i>{{ field.name }}
						</a>

				{% endif %}

	{% endfor %}
	<script>
		$('body').on('click', "[id$='-top-button-foreground']", function() {
			if($(this).attr('attr-href')!=""){
				var url=$(this).attr('attr-href');
				if($(this).attr('attr-search')==1){
					url+='?'+$("#search_param").val();
				}
				window.open(
				  url,
				  '_blank'
				);

			}
		});
	</script>
	</div>
	</p>
	<!-- END BUTTONZONE -->
			<div class="calendar-env">
	    			<!-- Calendar Body -->
	    			<div class="">
	    				<div id="calendar"></div>
	    			</div>
	  	</div>
		</div>
		<!-- END MAIN CONTENT -->
		{{ include('@Globale/footer.html.twig') }}
	</div>
	{{ include('@Globale/chat.html.twig') }}
	<!-- Chat Histories -->
	{{ include('@Globale/chat_histories.html.twig') }}
</div>
	<!-- MODALS  -->
	{% set formConstructor = form %}
  {{ include('@Globale/genericajaxform.html.twig') }}
	<!-- END MODALS -->

{% block footer %}

	<link rel="stylesheet" href="{{ url('index') }}js/datatables/datatables.css">
	<link rel="stylesheet" href="{{ url('index') }}js/select2/select2-bootstrap.css">
	<link rel="stylesheet" href="{{ url('index') }}js/select2/select2.css">
  <link rel="stylesheet" href="{{ url('index') }}js/fullcalendar-2/fullcalendar.min.css">
	<link rel="stylesheet" href="{{ url('index') }}css/colpick.css">
	<link rel="stylesheet" href="{{ url('index') }}js/selectboxit/jquery.selectBoxIt.css">

	<!-- Imported scripts on this page -->
 	<script src="{{ url('index') }}js/datatables/datatables.js"></script>
	<script src="{{ url('index') }}js/select2/select2.min.js"></script>
	<script src="{{ url('index') }}js/moment.min.js"></script>
	<script src="{{ url('index') }}js/moment-es.js"></script>

  <script src="{{ url('index') }}js/fullcalendar-2/fullcalendar.min.js"></script>
	<script src='{{ url('index') }}js/fullcalendar-2/lang/es.js'></script>
	<script src="{{ url('index') }}js/bootstrap-colorpicker.min.js" type="text/javascript"></script>
	<script src="{{ url('index') }}js/colpick.js" type="text/javascript"></script>
	<script src="{{ url('index') }}js/bootstrap-datepicker.js"></script>
	<script src="{{ url('index') }}js/bootstrap-timepicker.min.js"></script>


  <script>

  var fullCalendar = fullCalendar || {};

	function elements_reload(){
		$('#calendar').fullCalendar('refetchEvents');
	}

  ;(function($, window, undefined)
  {
    "use strict";

    $(document).ready(function(){
			var load_wait=0;
      fullCalendar.$container = $(".calendar-env");
      $.extend(fullCalendar, {
        isPresent: fullCalendar.$container.length > 0
      });

      //Container Height fit with the document
      if(fullCalendar.isPresent){
        fullCalendar.$sidebar = fullCalendar.$container.find('.calendar-sidebar');
        fullCalendar.$body = fullCalendar.$container.find('.calendar-body');

        // Checkboxes
        var $cb = fullCalendar.$body.find('table thead input[type="checkbox"], table tfoot input[type="checkbox"]');
        $cb.on('click', function(){
          $cb.attr('checked', this.checked).trigger('change');
          calendar_toggle_checkbox_status(this.checked);
        });
        // Highlight
        fullCalendar.$body.find('table tbody input[type="checkbox"]').on('change', function(){
          $(this).closest('tr')[this.checked ? 'addClass' : 'removeClass']('highlight');
        });

        // Setup Calendar
        if($.isFunction($.fn.fullCalendar)){
          var calendar = $('#calendar');
          calendar.fullCalendar({
						eventSources: ['{{url('hollidaysGet',{'id':id})}}'],
            header: {
              left: 'title',
              right: ''
            },
						defaultDate: moment('{{ year }}-01-01'),
            defaultView: 'year',
            editable: true,
            firstDay: 1,
            height: "auto",
            droppable: false,
            drop: function(date, allDay) {
              var $this = $(this),
                eventObject = {
                  title: $this.text(),
                  start: date,
                  allDay: allDay,
                  className: $this.data('event-class')
                };
              calendar.fullCalendar('renderEvent', eventObject, true);
              $this.remove();
            },
						eventClick: function(calEvent, jsEvent, view) {
							var dataUrl='{{url('dataHollidays',{'id':'_____'})}}';
							var url=dataUrl.replace('_____',calEvent.id);
							$.post(url, null,	function(data, status, xhr){
										$("#holidays-modal-form-body").html(data);
										$('#holidays-modal-form input').iCheck({checkboxClass: 'icheckbox_flat-blue',radioClass: 'iradio_flat-blue'});
										$("#holidays-modal-form").modal();
							});
					  },
						loading: function( isLoading, view ) {
        		},
					  eventDrop:function( event, delta, revertFunc, jsEvent, ui, view ){
						},
						eventResize:function( event, delta, revertFunc, jsEvent, ui, view ) {
						}

          });

        }
        else{

        }

        $("body").on('submit', '#add_event_form', function(ev){
          fit_calendar_container_height();
          return false;
        });


				$('[id^="holidays-modal-form"]').on('hidden.bs.modal', function () {
				  elements_reload();
				});

      }

			{#$('body').on('click', "[id^='{{ listConstructor.id }}-field-button-{{ field.id }}']", function() {
				$.post(url, null,	function(data, status, xhr){
							$("#{{field.modal}}-modal-form-body").html(data);
							$('#{{field.modal}}-modal-form input').iCheck({checkboxClass: 'icheckbox_flat-blue',radioClass: 'iradio_flat-blue'});
							$("#{{field.modal}}-modal-form").modal();
				});
			});#}


			});
  })(jQuery);

  function fit_calendar_container_height(){
    if(fullCalendar.isPresent){
      if(fullCalendar.$sidebar.height() < fullCalendar.$body.height()){
        fullCalendar.$sidebar.height( fullCalendar.$body.height() );
      }else{
        var old_height = fullCalendar.$sidebar.height();
        fullCalendar.$sidebar.height('');
        if(fullCalendar.$sidebar.height() < fullCalendar.$body.height()){
          fullCalendar.$sidebar.height(old_height);
        }
      }
    }
  }

  function reset_calendar_container_height(){
    if(fullCalendar.isPresent){
      fullCalendar.$sidebar.height('auto');
    }
  }

  function calendar_toggle_checkbox_status(checked){
    fullCalendar.$body.find('table tbody input[type="checkbox"]' + (checked ? '' : ':checked')).attr('checked',  ! checked).click();
  }

  </script>
  {{ include('@Globale/bottom.html.twig') }}
	<script src="{{ url('index') }}js/selectboxit/jquery.selectBoxIt.min.js"></script>
	<script src="{{ url('index') }}js/typeahead.min.js"></script>
{% endblock %}
</body>
