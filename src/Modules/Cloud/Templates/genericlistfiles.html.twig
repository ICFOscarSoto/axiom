{% set listConstructor = cloudConstructor.list[0] %}
{% set listOrigin = "genericlist" %}
{# for know if list.html is invoked directly from controller and we need to make modals inside list#}
  <div class="panel minimal">
  <div class="panel-heading">
    <div class="panel-title">Archivos adjuntos</div>
  </div>
    <div class="{{ cloudConstructor.id }}" attr-id="{{ listConstructor.id }}" attr-path="{{cloudConstructor.path}}"><div class="dz-message" data-dz-message>
      {% if include_pre_templates is defined %}
        {% set include_pre_templates = [] %}
      {% endif %}
      {% if include_post_templates is defined %}
        {% set include_post_templates = [] %}
      {% endif %}
      {{ include('@Globale/list.html.twig') }}

      <div class="btn-group" style="display:inline-flex;">
               {% if cloudConstructor.types is defined and cloudConstructor.types|length >0 %}
                <select name="type" id="type">
                  {% for type in cloudConstructor.types %}
                    <option value="{{ type }}">{{ type }}</option>
                  {% endfor %}
                </select>
                {% endif %}
                <a attr-search=" false " attr-href="" href="javascript:void(0);" style="font-size: 20px;height: 31px;" id="{{ cloudConstructor.id }}-scan-button" type="button" class="btn btn-primary dz-clickable" data-toggle="tooltip" data-placement="bottom" title="" data-original-title=" Escanear archivo  ">
    						<i class="fa fa-eye"></i></a>
    						<a attr-search=" false " attr-href="" href="javascript:void(0);" style="font-size: 20px;height: 31px;" id="{{ cloudConstructor.id }}-top-button" type="button" class="btn btn-primary dz-clickable" data-toggle="tooltip" data-placement="bottom" title="" data-original-title=" Subir archivo  ">
    						<i class="fa fa-cloud-upload"></i></a>
      </div>
      <script>
        $(document).ready(function(){
          Dropzone.autoDiscover = false;
          var jsonFiles = [];
          var dropzone_default = new Dropzone(".{{ cloudConstructor.id }}", {
              url: '{{cloudConstructor.path}}',
              maxFilesize: 20,  // in Mb
              addRemoveLinks: false,
              clickable: '#{{ cloudConstructor.id }}-top-button',
              init: function () {
                  this.on("maxfilesexceeded", function(file) {
                      this.removeFile(file);
                  });
                  this.on("success", function(file, response) {
                      if (response.uploaded){
                        this.removeFile(file);
                        $("#{{ listConstructor.id }}").DataTable().ajax.reload();
                      }
                  });
                  this.on("sending", function(file, xhr, formData){
                    if($('#type').length){
                      formData.append('type', $('#type').val());
                    }
                  });
              }

          });




        });
        </script>
    </div></div>
</div>
